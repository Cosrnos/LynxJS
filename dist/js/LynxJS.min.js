/*! LynxJS v0.5.0 built 10-08-2014 */
!function(){function a(){c=Lynx.Logger,c.info("Starting Lynx Library...."),Lynx.Heart.start();var a=Lynx.Task.create();a.before=function(){return c.debug("Testing Event Emitter..."),b()?(c.debug("Starting render loop..."),c.debug("Tests passed!"),Lynx.Graphics.Loop.start(),Lynx.emit("ready"),!0):c.warn("Lynx Event Emitter is not working properly. Aborting.")}.bind(this),Lynx.Heart.queueTask(a)}function b(){var a=new Lynx.EventListener,b=0;return a.on("__sample",function(a){b=a.testValue}),Lynx.addListener(a),Lynx.emit("__sample",{testValue:1}),1===b?!0:!1}var c={};window.Lynx={debug:!1,log:function(){Lynx.Logger.log.call(this,Array.prototype.slice.call(arguments))}},window.addEventListener("load",function(){a.apply(Lynx)})}(),function(){Lynx.EventEmitter=function(){var a=[];this.addListener=function(b){a.push(b)},this.on=function(a,b){var c=new Lynx.EventListener;return c.on(a,b),c},this.removeListener=function(b){var c=a.indexOf(b);return c&&-1!==c?(a.splice(c,1),!0):!1},this.emit=function(b,c){b=b||"",c=c||{},_.each(a,function(a){a.notify(b,c)})}},Lynx.EventEmitter.apply(Lynx)}(),function(){Lynx.EventListener=function(){var a={};this.addListener=function(b,c){a[b]||(a[b]=[]),a[b].push(c)},this.getEvents=function(){return a},this.on=function(a,b){this.addListener(a,b)},this.removeListener=function(b,c){if(!a[b])return!1;var d=a[b].indexOf(c);return d&&-1!==d?(a[b].splice(d,1),0===a[b].length&&delete a[b],!0):!1},this.notify=function(b,c){b=b||"",c=c||{},_.each(a[b],function(a){a(c)})},Lynx.addListener(this)}}(),function(){function a(){f||(f=Lynx.Logger)}function b(){var a=[];d=d.concat(g),g=[],_.each(d,function(b,c){b.resolved=b.before()||!1,b.event&&(Lynx.emit(b,b.data),b.resolved=!0),b.resolved=b.after()||b.resolved,b.resolved&&a.push(c)}),_.each(a,function(a){d.splice(a,1)})}function c(){return b(),!0}var d=[],e=null,f=null,g=[];Lynx.Heart={start:function(){return a(),e?void f.warn("Cannot start Lynx.Heart as it is already running."):(f.debug("Starting Lynx.Heart..."),e=window.setInterval(function(){c()},1),!0)},stop:function(){return e?(f.debug("Stopping Lynx.Heart..."),window.clearInterval(e),!0):void 0},emit:function(a,b){var c=new Lynx.Task;c.event=a,c.data=b,Lynx.Heart.queueTask(c)},queueTask:function(a){return g.push(a)-1},removeTaskFromQueue:function(a){return a>=g.length?!1:g.splice(a,1)-1}}}(),function(){var a=console.log.bind(console),b=[],c=function(){var a="internal",b="";this.background=-1,this.color=-1,this.level=0,this.prefix={color:-1,background:-1},Object.defineProperty(this,"name",{get:function(){return a},set:function(c){a=c,b=""===b?c:b}}),Object.defineProperty(this.prefix,"text",{get:function(){return""===b?a:b},set:function(a){b=a}}),this.handler=function(){}};Lynx.Logger={threshold:0,_log:function(){var b=Array.prototype.slice.call(arguments);if(b&&b[0]){if(b[0]instanceof c)return this._processLogType.apply(this,b);a.apply(this,b)}else this.warn("Cannot call log with empty parameters");return Lynx.Logger},_processLogType:function(){var b=Array.prototype.slice.call(arguments);if(b&&b[0])if(b[0].name){var c=b.shift(),d=b,e="";e+=-1!==c.prefix.background?"background: "+c.prefix.background+"; ":"",e+=-1!==c.prefix.color?"color: "+c.prefix.color+"; ":"",""!==e?d.unshift("%c["+c.prefix.text+"]",e):d.unshift("["+c.prefix.text+"]"),a.apply(this,d)}else this.warn("Cannot call _processLogType with non Lynx.LogType first parameter.");else this.warn("Cannot call _processLogType with empty parameters");return Lynx.Logger},createLogType:function(a){var d=new c;return d=_.extend(d,a),d=_.defaults(d,a),b[d.name]?this.warn("A log type that has already been defined cannot be overwritten. Tried overwriting "+d.name):b[d.name]=d,d.hasOwnProperty("_cmd")&&("string"==typeof d._cmd&&(d._cmd=[d._cmd]),_.each(d._cmd,function(a){Lynx.Logger[a]=function(){var a=Array.prototype.slice.call(arguments);a.unshift(Object.create(d)),this._log.apply(this,a)}}),delete d._cmd),b.push(d),Lynx.Logger}},Object.defineProperty(Lynx.Logger,"LogType",{get:function(){return b},set:function(){Lynx.Logger.warn("You cannot overwrite the value of the LogType global.")}}),Lynx.Logger.createLogType({name:"debug",level:2,_cmd:["debug"],prefix:{text:"DEBUG",color:"#00ffff",background:"#000000"}}),Lynx.Logger.createLogType({name:"info",level:2,_cmd:["info","log"],prefix:{text:"INFO"}}),Lynx.Logger.createLogType({name:"warning",level:3,_cmd:["warn"],prefix:{text:"WARNING",color:"#FF8800"}})}(),function(){function a(){Lynx.EventListener.apply(this),this.extend=function(a){return _.extend({},this,a)},this.reopen=function(b){return _.extend(a,b)}}Lynx.Object={create:function(b){var c=b||{};return"object"!=typeof c?!1:_.extend(new a,b)},apply:function(b){_.extend(b,new a)}}}(),function(){function a(){this.before=function(){},this.after=function(){},this.resolved=!1,this.event=null,this.data={},this.params=[]}Lynx.Task={create:function(b){return _.extend(new a,b)}}}(),Lynx.Graphics={},function(){function a(a,b){var e=0,f=0,g=Lynx.Graphics.Color.create();Lynx.Object.apply(this),b!==!1&&(b=!0),this.id=c++,this.context="2d",this.buffer=null,Object.defineProperty(this,"height",{get:function(){return e},set:function(a){"number"!=typeof a||isNaN(a)?d.warn("Cannot set height value of canvas #"+this.id+" to "+a+" as it is not an integer."):(e=a,this.element.height=e,this.buffer&&(this.buffer.height=e))}}),Object.defineProperty(this,"width",{get:function(){return f},set:function(a){"number"!=typeof a||isNaN(a)?d.warn("Cannot set width value of canvas #"+this.id+" to "+a+"as it is not an integer."):(f=a,this.element.width=f,this.buffer&&(this.buffer.width=f))}}),Object.defineProperty(this,"background",{get:function(){if("number"!=typeof g||isNaN(value)){if(Lynx.Graphics.isColor(g))return g}else;return g},set:function(a){Lynx.Graphics.isColor(a)?g=a:"number"==typeof a&&!isNaN(a)&&a>0||"string"==typeof a?g=Lynx.Graphics.Color.createFromHex(a):d.warn("Could not set background of canvas #"+this.id+' to invalid color value "'+a+'"')}}),a&&"CANVAS"===a.tagName?(this.element=a,this.height=this.element.height,this.width=this.element.width,a.LynxCanvas=this):this.element=document.createElement("canvas"),b&&(this.buffer=Lynx.Graphics.Canvas.createBuffer(null,{width:this.width,height:this.height,background:this.background,context:this.context})),this.renderer=Lynx.Graphics.Renderer.create(this,{}),Lynx.Graphics.Loop.addCanvas(this)}function b(a){a=a||"2d",this.context="2d",this.element=document.createElement("canvas")}var c=-1,d=Lynx.Logger;a.prototype.destroy=function(){Lynx.Graphics.Loop.removeCanvas(this)},a.prototype.insertInto=function(a){a&&a.appendChild(this.element)},Lynx.Graphics.Canvas={create:function(b,c){return b=b||null,c=c||{},_.extend(new a(b),c)},createBuffer:function(a,c){return a=a||null,c=c||{},_.extend(new b(a),c)}}}(),function(){function a(a,b,c){return"#"+a.toString(16)+b.toString(16)+c.toString(16)}function b(a){"#"===a[0]&&a.shift();var b=parseInt(a[0]+a[1],16),d=parseInt(a[2]+a[3],16),e=parseInt(a[4]+a[5],16);return b>255||d>255||e>255?!1:new c(b,d,e,255)}function c(c,d,e,f){var c=c,d=d,e=e,f=f;Object.defineProperty(this,"r",{get:function(){return c},set:function(a){"number"==typeof a&&!isNaN(a)&&a>=0&&255>a&&(c=a)}}),Object.defineProperty(this,"g",{get:function(){return d},set:function(a){"number"==typeof a&&!isNaN(a)&&a>=0&&255>a&&(d=a)}}),Object.defineProperty(this,"b",{get:function(){return e},set:function(a){"number"==typeof a&&!isNaN(a)&&a>=0&&255>a&&(e=a)}}),Object.defineProperty(this,"alpha",{get:function(){return f},set:function(a){"number"==typeof a&&!isNaN(a)&&a>=0&&255>a&&(f=a)}}),Object.defineProperty(this,"hex",{get:function(){return a(this.r,this.g,this.b)},set:function(a){var c=null;return"number"==typeof a&&!isNaN(a)&&a>=0&&(a=a.toString(16)),"string"!=typeof a?void Lynx.Logger.warn("Cannot set hex value to "+a+" of color as it is not a valid input. Please provide an integer or string."):(c=b(a),void(c?(this.r=c.r,this.g=c.g,this.b=c.b,this.a=c.a):Lynx.Logger.warn("Failed to parse hex to color.")))}})}var d={};Lynx.Graphics.isColor=function(a){return a instanceof c},Lynx.Graphics.Color={create:function(a){return _.extend(new c(0,0,0,1),a)},createFromHex:function(a){var b=new c(0,0,0,1);return b.hex=a,b},define:function(a,b){if(b instanceof c)d[a]=b;else{if("number"!=typeof b&&"string"!=typeof b)return Lynx.Logger.warn("Could not define color '",a,"' as an invalid value was passed."),!1;var e=new c(0,0,0,1);e.hex=b}return Lynx.Logger.info("Created color ",a,"!"),!0},get:function(a){return d[a]}}}(),function(){function a(){Lynx.emit("graphics.beforeFrame",{nodes:d}),_.each(d,function(a){a.renderer.render()}),Lynx.emit("graphics.afterFrame",{nodes:d}),b&&window.requestAnimationFrame(a)}var b=!1,c=Lynx.Logger,d=[];Lynx.Graphics.Loop=Lynx.Object.create({start:function(){return b?(c.warn("Cannot start the draw loop as it is already running."),!1):(b=!0,void window.requestAnimationFrame(a))},pause:function(){b&&(b=!1,c.info("Graphics loop paused."))},resume:function(){b||(b=!0,c.info("Graphics loop resumed."),window.requestAnimationFrame(a))},addCanvas:function(a){return d.push(a),!0},removeCanvas:function(a){var b=d.indexOf(a);return-1!==b?(d.splice(b,1),!0):!1}}),Object.defineProperty(Lynx.Graphics.Loop,"isRunning",{get:function(){return b}})}(),function(){function a(a){var b=[];this.parent=a,Object.defineProperty(this,"context",{get:function(){return this.parent.context},set:function(a){this.parent.context=a}}),this.addNode=function(){var a=Array.prototype.slice.call(arguments);return _.each(a,function(a){b.push(a)}),!0},this.removeNode=function(){var a=Array.prototype.slice.call(arguments),c=0;return _.each(a,function(a){var d=b.indexOf(a);-1!==d&&(b.splice(d,1),c++)}),a.length<=c},this.render=function(){var a=this.parent.element.getContext(this.context),b=this.parent.background;a.clearRect(0,0,this.parent.width,this.parent.height),a.fillStyle="rgb("+b.r+","+b.g+","+b.b+")",a.fillRect(0,0,this.parent.width,this.parent.height)},Object.defineProperty(this,"nodes",{get:function(){return b},set:function(){Lynx.Logger.warn("Cannot override value of nodes. Please use addNode and removeNode to manipulate the list.")}})}Lynx.Graphics.Renderer=Lynx.Object.create({create:function(b,c){return c=c||{},_.extend(new a(b),c)}})}();