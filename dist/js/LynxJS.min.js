/*! LynxJS v0.5.0 built 05-08-2014 */
!function(){function a(){c=Lynx.Logger,c.info("Starting Lynx Library...."),Lynx.Heart.start();var a=new Lynx.Task;a.before=function(){return c.debug("Intializing Event Emitter..."),Lynx.EventEmitter.apply(this),c.debug("Testing Event Emitter..."),b()?(c.debug("Tests passed!"),!0):c.warn("Lynx Event Emitter is not working properly. Aborting.")}.bind(this),Lynx.Heart.queueTask(a)}function b(){var a=new Lynx.EventListener,b=0;return a.on("__sample",function(a){b=a.testValue}),Lynx.addListener(a),Lynx.emit("__sample",{testValue:1}),1===b?!0:!1}var c={};window.Lynx={debug:!1,log:function(){Lynx.Logger.log.call(this,Array.prototype.slice.call(arguments))}},window.addEventListener("load",function(){a.apply(Lynx)})}(),function(){Lynx.EventEmitter=function(){var a=[];this.addListener=function(b){a.push(b)},this.removeListener=function(b){var c=a.indexOf(b);return c&&-1!==c?(a.splice(c,1),!0):!1},this.emit=function(b,c){var b=b||"",c=c||{};_.each(a,function(a){a.notify(b,c)})}}}(),function(){Lynx.Logger;Lynx.EventListener=function(){var a={};this.addListener=function(b,c){a[b]||(a[b]=[]),a[b].push(c)},this.on=function(a,b){this.addListener(a,b)},this.removeListener=function(b,c){if(!a[b])return!1;var d=a[b].indexOf(c);return d&&-1!==d?(a[b].splice(d,1),0===a[b].length&&delete a[b],!0):!1},this.notify=function(b,c){var b=b||"",c=c||{};_.each(a[b],function(a){a(c)})}}}(),function(){function a(){f||(f=Lynx.Logger)}function b(){var a=[];d=d.concat(g),g=[],_.each(d,function(b,c){b.resolved=b.before()||!1,b.event&&(Lynx.emit(b,b.data),b.resolved=!0),b.resolved=b.after()||b.resolved,b.resolved&&a.push(c)}),_.each(a,function(a){d.splice(a,1)})}function c(){return b(),!0}var d=[],e=null,f=null,g=[];Lynx.Heart={start:function(){return a(),e?void f.warn("Cannot start Lynx.Heart as it is already running."):(f.debug("Starting Lynx.Heart..."),e=window.setInterval(function(){c()},1),!0)},stop:function(){return e?(f.debug("Stopping Lynx.Heart..."),window.clearInterval(e),!0):void 0},emit:function(a,b){var c=new Lynx.Task;c.event=a,c.data=b,Lynx.Heart.queueTask(c)},queueTask:function(a){return g.push(a)-1},removeTaskFromQueue:function(a){return a>=g.length?!1:g.splice(a,1)-1}}}(),function(){var a=console.log.bind(console),b=[],c=function(){var a="internal",b="";this.background=-1,this.color=-1,this.level=0,this.prefix={color:-1,background:-1},Object.defineProperty(this,"name",{get:function(){return a},set:function(c){a=c,b=""===b?c:b}}),Object.defineProperty(this.prefix,"text",{get:function(){return""===b?a:b},set:function(a){b=a}}),this.handler=function(){}};Lynx.Logger={threshold:0,_log:function(){var b=Array.prototype.slice.call(arguments);if(b&&b[0]){if(b[0]instanceof c)return this._processLogType.apply(this,b);a.apply(this,b)}else this.warn("Cannot call log with empty parameters");return Lynx.Logger},_processLogType:function(){var b=Array.prototype.slice.call(arguments);if(b&&b[0])if(b[0].name){var c=b.shift(),d=b,e="";e+=-1!==c.prefix.background?"background: "+c.prefix.background+"; ":"",e+=-1!==c.prefix.color?"color: "+c.prefix.color+"; ":"",""!==e?d.unshift("%c["+c.prefix.text+"]",e):d.unshift("["+c.prefix.text+"]"),a.apply(this,d)}else this.warn("Cannot call _processLogType with non Lynx.LogType first parameter.");else this.warn("Cannot call _processLogType with empty parameters");return Lynx.Logger},createLogType:function(a){var d=new c;return d=_.extend(d,a),d=_.defaults(d,a),b[d.name]?this.warn("A log type that has already been defined cannot be overwritten. Tried overwriting "+d.name):b[d.name]=d,d.hasOwnProperty("_cmd")&&("string"==typeof d._cmd&&(d._cmd=[d._cmd]),_.each(d._cmd,function(a){Lynx.Logger[a]=function(){var a=Array.prototype.slice.call(arguments);a.unshift(Object.create(d)),this._log.apply(this,a)}}),delete d._cmd),b.push(d),Lynx.Logger}},Object.defineProperty(Lynx.Logger,"LogType",{get:function(){return b},set:function(){Lynx.Logger.warn("You cannot overwrite the value of the LogType global.")}}),Lynx.Logger.createLogType({name:"debug",level:2,_cmd:["debug"],prefix:{text:"DEBUG",color:"#00ffff",background:"#000000"}}),Lynx.Logger.createLogType({name:"info",level:2,_cmd:["info","log"],prefix:{text:"INFO"}}),Lynx.Logger.createLogType({name:"warning",level:3,_cmd:["warn"],prefix:{text:"WARNING",color:"#FF8800"}})}(),function(){Lynx.Task=function(){this.before=function(){},this.after=function(){},this.resolved=!1,this.event=null,this.data={},this.params=[]}}();